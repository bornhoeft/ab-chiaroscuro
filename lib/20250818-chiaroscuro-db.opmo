;;; ---------------------------------------------------------------------
;;;
;;; Chiaroscuro
;;; Achim Bornhoeft (c) 2025
;;;
;;; ---------------------------------------------------------------------

#|
Chiaroscuro

bezeichnet ein in der Spätrenaissance und im Barock entwickeltes 
Gestaltungsmittel der Grafik und Malerei, das sich durch starke 
Hell-Dunkel-Kontraste auszeichnet und sowohl der Steigerung des 
Räumlichen als auch der des Ausdrucks dient.
https://de.wikipedia.org/wiki/Chiaroscuro
|#

;; (defparameter *default-notation-editor* "MuseScore 4.app")
(defparameter *default-notation-editor* "Sibelius.app")

;;; Franz Schubert, String Quartet No. 14 in D minor, D. 810
;;; Second movement, Andante con moto, "Death and the Maiden"
;;; Measures 1 to 32

;; import of the score
;; Preview with cmd-2
(setf material
      (musicxml-to-omn 
           "/Users/bornhoeft/Documents/projekte/04-kammermusik2-4/imagines/scores/musicxml/Schemen-16min-orig.musicxml"))

;; string quartet instruments
(setf instruments '(violin viola violoncello contrabass))

(init-seed 12358)

;; change pitches to random octaves
(setf new-material
      (loop for i in instruments
              for m in material
              collect
              (rnd-octaves i m)))

(setf diss-vel-len
      (loop for i in new-material
            collect (length (flatten (omn :velocity i)))))

(setf new-velocity
      (loop for i in diss-vel-len
              collect
              (gen-weight i '((ff 1) (pp 2)))))

(setf new-vel
      (velocity-to-dynamic new-velocity))


(add-text-attributes
 '(tasto-pont "tasto⟹pont")
 '(t-p "t⟹p")
 '(pont-tasto "pont⟹tasto")
 '(p-t "p⟹t")
 '(pont-tasto-pont "pont⟹tasto⟹pont")
 '(p-t-p "p⟹t⟹p")
 '(tasto-pont-tasto "tasto⟹pont⟹tasto")
 '(t-p-t "t⟹p⟹t")
 '(tasto-arr "tasto⟹")
 '(pont-arr "pont⟹"))

(setf articulations
      (loop for i in new-velocity
            collect
            (loop for j in i
                    when (equal j 'pp)
                  collect 'tasto-arr
                    when (equal j 'ff)
                    collect 'pont-arr)))

#|
;; without transistions
(setf articulations
      (loop for i in new-velocity
            collect
            (loop for j in i
                    when (equal j 'pp)
                  collect 'tasto
                    when (equal j 'ff)
                    collect 'pont)))
|#

(setf new-art
      (loop for i in articulations
        collect
        (loop for j in (cdr i)
                for k from 1
      if (equal (nth k i)
                  (nth (- k 1) i))
                collect '- into reslis
                else
                collect j into reslis
                  finally (return (cons (first i) reslis)))))

;; test if the same amount of articulations than dynamics:
;; (loop for i in new-art collect (length i))
                
(assign-variable 'voc
(make-omn
 :pitch (omn :pitch new-material)
 :length (omn :length new-material)
 :velocity new-vel
 :articulation new-art))

;; individual corrections with dictum

(setf voc1 (dictum '((:bar 32 :if tasto-arr :do tasto) 
                     ;; replace last articulation
                     (:bar 32 :if pp< :do pp)
                     ;; replace last dynamic
                     ) 
                   (omn-to-time-signature voc1 '(4 4))))

(setf voc2 (dictum '((:bar 1 :event 1 :do pp<)
                     (:bar 31 :if tasto-arr :do tasto) 
                     (:bar 31 :if pp< :do pp)
                     (:bar 32 :remove :velocity))
                   (omn-to-time-signature voc2 '(4 4))))

(setf voc3 (dictum '((:bar 1 :event 1 :do pp<)
                     (:bar 32 :if tasto-arr :do tasto) 
                     (:bar 32 :if pp< :do pp)) 
                   (omn-to-time-signature voc3 '(4 4))))

(setf voc4 (dictum '((:bar 1 :event 1 :do pp<)
                     (:bar 31 :if tasto-arr :do tasto)) 
                   (omn-to-time-signature voc4 '(4 4))))

;;;---------------------------------------------------------
;;; Score and Layout

(def-score chiaroscuro
    (:title "Chiaroscuro"
     :composer "Achim Bornhoeft"
     :copyright "Copyright © 2025"
     :key-signature 'chromatic
     :time-signature '((1 1 1 1) 4)
     :tempo 6
     :layout (list
              (bracket-group
               (violin-layout 'voc1 :name "Violin" :abbr "Vn")
               (viola-layout 'voc2 :name "Viola" :abbr "Va")
               (violoncello-layout 'voc3 :name "Violoncello" :abbr "Vc")
               (contrabass-layout 'voc4 :name "Doublebass" :abbr. "Db"))))
  (voc1
   :omn voc1
   :channel 1
   :sound 'gm
   :program 'violin
   :volume 100
   :pan 44
   :controllers (91 '(48))
   )
  
  (voc2
   :omn voc2
   :channel 2
   :sound 'gm
   :program 'viola
   :volume 100
   :pan 54
   :controllers (91 '(48))
   )

  (voc3
   :omn voc3
   :channel 3
   :sound 'gm
   :program 'cello
   :volume 90
   :pan 74
   :controllers (91 '(60))
   )

  (voc4
   :omn voc4
   :channel 4
   :sound 'gm
   :program 'contrabass
   :volume 90
   :pan 84
   :controllers (91 '(60))
   )
  )

(display-musicxml *last-score*)
(musicxml-to-editor)